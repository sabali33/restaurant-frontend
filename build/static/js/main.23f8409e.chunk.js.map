{"version":3,"sources":["config.js","Actions.js/Auth.js","Components/LoginForm.js","Components/SignupForm.js","Components/LoginSignup.js","Components/MainApp.js","App.js","reportWebVitals.js","Reducers/Auth.js","Store/index.js","index.js"],"names":["config","apiRoot","LOGIN_USER","loginAction","email","password","localStorage","window","tokenStr","getItem","token","JSON","parse","dispatch","a","fetch","userId","headers","Authorization","resp","json","user","error","message","name","removeItem","Error","type","method","body","stringify","response","setItem","id","LoginForm","props","useState","loginEmail","setLoginEmail","loginPassword","setLoginPassword","loginError","setLoginError","useDispatch","loginInputChangeHandler","setFunc","event","persist","target","value","loginHandler","className","htmlFor","onChange","bind","onClick","signUpReducer","state","action","data","field","fieldsDirty","SignupForm","useSelector","auth","dispatchRedux","useReducer","signupState","useEffect","inputChangeHandler","e","first_name","last_name","password_confirm","LoginSignup","MainApp","App","getUser","useCallback","console","log","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Auth","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23f8409e.chunk.js","sourcesContent":["const config =  {\n    apiRoot: 'http://localhost:5000/api/v1/'\n}\nexport default config;","import config from '../config';\n\nexport const LOGIN_USER = \"LOGIN_USER\";\n\nexport const loginAction = ( email='', password='' ) => {\n    const localStorage = window.localStorage;\n    const tokenStr = localStorage.getItem('ra-user-token');\n    const token = JSON.parse(tokenStr);\n    //localStorage.removeItem('ra-user-token');\n    return async (dispatch) => {\n        \n        if( !email && !password && token ){\n            const resp = await fetch( `${config.apiRoot}user/${token.userId}`, {\n                headers: {\n                    Authorization: `Bearer ${token.token}`\n                }\n            });\n            const user = await resp.json();\n            if( user.error ){\n                if( user.message.name === 'TokenExpiredError'){\n                    localStorage.removeItem('ra-user-token');\n                    throw new Error('Session has expired');\n                }\n                throw new Error(user.message);\n            }\n            \n            return dispatch({\n                user,\n                token: token,\n                type: LOGIN_USER\n            })\n        }else{\n            const response = await fetch(`${config.apiRoot}login`, {\n                method: \"POST\",\n                headers:{\n                    'Content-type': \"application/json\"\n                },\n                body: JSON.stringify({email, password})\n            });\n            const user = await response.json()\n            \n            if( user.error ){\n                throw new Error(user.message);\n            }\n            \n            localStorage.setItem('ra-user-token', JSON.stringify({token: user.token, userId: user.user.id}));\n\n            return dispatch({\n                ...user,\n                type: LOGIN_USER\n            });\n        }\n    }\n}","import React, {useState} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginAction } from '../Actions.js/Auth';\n\nconst LoginForm = props => {\n    const [ loginEmail, setLoginEmail ] = useState('');\n    const [ loginPassword, setLoginPassword ] = useState('');\n    const [ loginError, setLoginError ] = useState(null);\n    const dispatch = useDispatch();\n\n    const loginInputChangeHandler = (setFunc, event) => {\n        event.persist();\n        setFunc(event.target.value);\n    }\n    const loginHandler = async () => {\n        try{\n           await dispatch(loginAction(loginEmail, loginPassword)); \n        }catch( err){\n            setLoginError(err.message);\n        }\n    }\n    return (\n        <div className=\"login-box w-1/2 p-12 border-2 border-solid border-gray-600 border-opacity-100\">\n            {\n                loginError && <div className=\"text-red-400 pt-3 mb-8\"> Error: {loginError}</div>\n            }\n            <h2 className=\"text-2xl font-bold mb-16\">\n                Login\n            </h2>\n            <div className=\"text-field mb-10\">\n                <p className=\"mb-2\">\n                    <label htmlFor=\"login-email\" className=\"text-gray-700\"> Email </label>\n                </p>\n                <p>\n                    <input type=\"email\"  onChange={ loginInputChangeHandler.bind(this, setLoginEmail) } value={loginEmail} id=\"login-email\" className=\"rounded w-full leading-10 pl-5 shadow bg-gray-400 text-white\"/>\n                </p>\n            </div>\n            <div className=\"text-field mb-10\">\n                <p className=\"mb-2\">\n                    <label htmlFor=\"login-password\" className=\"text-gray-700\"> Password </label>\n                </p>\n                <p>\n                    <input type=\"password\"  onChange={ loginInputChangeHandler.bind(this, setLoginPassword) } value={loginPassword} id=\"login-password\" className=\"rounded w-full leading-10 pl-5 shadow bg-gray-400\"/>\n                </p>\n            </div>\n            <p>\n                <button  onClick={ loginHandler } className=\"rounded px-10 py-3 bg-yellow-200\"> Login </button>\n            </p>\n        </div>\n\n    )\n}\n\nexport default LoginForm;","import React, {useReducer, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nconst signUpReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            return {\n                ...state,\n                data: {...state.data, [action.field] : action.value }\n            };\n        case 'FIELD_TOUCH':\n            return {\n                ...state,\n                fieldsDirty: { ...state.fieldsDirty, [action.field]: true}\n            }  \n        default:\n            return state;\n    }\n}\n\nconst SignupForm = props => {\n    const user = useSelector( state => state.auth);\n    const dispatchRedux = useDispatch();\n\n    const [signupState, dispatch ] = useReducer(signUpReducer, {\n        data: {\n            'first_name': \"\",\n            'last_name': \"\",\n            'email': \"\",\n            'password': \"\",\n            'password_confirm': \"\",\n        },\n        fieldsDirty: {\n            'first_name': false,\n            'last_name': false,\n            'email': false,\n            'password': false,\n            'password_confirm': false,\n        }\n    });\n    useEffect( () => {\n        //console.log(user)\n    }, [dispatchRedux, user] );\n    const inputChangeHandler = ( field, e) => {\n        e.persist();\n        \n        dispatch({\n            type: 'INPUT_CHANGE',\n            field,\n            value: e.target.value\n        })\n    }\n    \n    return (\n        <div className=\"signup-box w-1/2 bg-gray-200 p-12 rounded-md\">\n            <h2 className=\"text-2xl font-bold mb-16\">\n                Sign up\n            </h2>\n            <div className=\"text-field mb-10\">\n                <p className=\"mb-2\">\n                    <label htmlFor=\"first-name\" className=\"text-gray-700\"> First Name </label>\n                </p>\n                <p>\n                    <input type=\"text\"  onChange={ inputChangeHandler.bind(this, 'first_name') } value={signupState.data.first_name} id=\"first-name\" className=\"rounded w-full leading-10 pl-5 shadow\"/>\n                </p>\n            </div>\n            <div className=\"text-field mb-10\">\n                <p className=\"mb-2\">\n                    <label htmlFor=\"last-name\" className=\"text-gray-700\"> Last Name </label>\n                </p>\n                <p>\n                    <input type=\"text\"  onChange={ inputChangeHandler.bind(this, 'last_name') } value={signupState.data.last_name} id=\"last-name\" className=\"rounded w-full leading-10 pl-5 shadow\"/>\n                </p>\n            </div>\n            <div className=\"text-field mb-10\">\n                <p className=\"mb-2\">\n                    <label htmlFor=\"email\" className=\"text-gray-700\"> Email </label>\n                </p>\n                <p>\n                    <input type=\"email\"  onChange={ inputChangeHandler.bind(this, 'email') } value={signupState.data.email} id=\"email\" className=\"rounded w-full leading-10 pl-5 shadow\"/>\n                </p>\n            </div>\n            <div className=\"text-field mb-10\">\n                <p className=\"mb-2\">\n                    <label htmlFor=\"password\" className=\"text-gray-700\"> Password </label>\n                </p>\n                <p>\n                    <input type=\"password\"  onChange={ inputChangeHandler.bind(this, 'password') } value={signupState.data.password} id=\"password\" className=\"rounded w-full leading-10 pl-5 shadow\"/>\n                </p>\n            </div>\n            <div className=\"text-field mb-10\">\n                <p className=\"mb-2\">\n                    <label htmlFor=\"password-confirm\" className=\"text-gray-700\"> Password Confirm </label>\n                </p>\n                <p>\n                    <input type=\"password\"  onChange={ inputChangeHandler.bind(this, 'password_confirm') } value={signupState.data.password_confirm} id=\"password-confirm\" className=\"rounded w-full leading-10 pl-5 shadow\"/>\n                </p>\n            </div>\n            <div className=\"text-field mb-10\">\n                <p>\n                    <button className=\"bg-yellow-200 text-gray-600 px-10 py-3 rounded font-bold\"> Sign up</button>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default SignupForm;","import React from 'react';\n\nimport LoginForm from './LoginForm';\nimport SignupForm from './SignupForm';\n\nconst LoginSignup = (props) => {\n    \n    return (\n        <div className=\"login-signup-box mx-auto\">\n            <div className=\"flex justify-between w-full\">\n                <SignupForm />\n                <LoginForm />\n            </div>\n        </div>\n    )\n\n}\n\nexport default LoginSignup;","import React from 'react';\n\nconst MainApp = ( props ) => {\n    return <div>\n        Welcome\n    </div>\n}\nexport default MainApp;","import { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport LoginSignup from './Components/LoginSignup';\nimport MainApp from './Components/MainApp'\nimport { loginAction } from './Actions.js/Auth';\n\n\nfunction App() {\n  const user = useSelector( state => state.auth);\n  const dispatch = useDispatch();\n  const getUser = useCallback(async () => {\n    try{\n      await dispatch(loginAction())\n    }catch( err ){\n      console.log(err.message)\n    }\n  }, [dispatch]);\n  useEffect( () => {\n    getUser();\n  }, [getUser]);\n  console.log(user)\n  return (\n    <div className=\"App pt-10\">\n      <header className=\"App-header mb-10 mx-auto container text-center\">\n        <div className=\"flex\">\n          <div className=\"w-1/3\">\n            <a\n                className=\"font-extrabold text-4xl\"\n                href=\"/\"\n                rel=\"noopener noreferrer\"\n              >\n              Restaurant <span className=\"text-yellow-200 px-2 bg-gray-600 rounded\">App</span>\n            </a>\n          </div>\n          <div className=\"w-2/3\">\n             {\n               user.user && <span className=\"text-gray-500 font-bold\"> { `${user.user.first_name} ${user.user.last_name}`} <a href=\"/\" className=\"text-red-400\">Logout</a></span>\n             }\n          </div>\n        </div>\n        \n      </header>\n      <main className=\"w-3/5 mx-auto\">\n        { user.user ? <MainApp user={user.user}/> : <LoginSignup />}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { LOGIN_USER } from \"../Actions.js/Auth\";\nconst Auth = {\n    user: null,\n    token: null\n}\nexport const AuthReducer = (state=Auth, action ) => {\n    switch( action.type ){\n        case LOGIN_USER:\n            return { ...state, user:action.user, token: action.token };\n\n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { AuthReducer } from '../Reducers/Auth';\n\nconst store = createStore(combineReducers({\n    auth: AuthReducer\n}), applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './Store';\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store}> \n    <App /> \n   </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}